@page
@model SnackAttack.Pages.Recipes.IndexModel

@{
    ViewData["Title"] = "Recipes";
}

<h1>Recipes</h1>

<p>
    <a asp-page="Create">Create New</a>
</p>



<form asp-page="./Index" method="get">
    <div class="form-actions no-color">
        <p>
            Find by name:
            <input type="text" name="SearchString" value="@Model.CurrentFilter" />
            <select name="CategoryFilter" asp-items="@Model.CategoryList">
                <option value="">All</option>
            </select>
            <input type="submit" value="Search" class="btn btn-primary" /> |
            <a asp-page="./Index">Back to full List</a>
        </p>
    </div>
</form>



<table class="table">
    <thead>
        <tr>
            <th>
                @Html.DisplayNameFor(model => model.Recipes[0].ID)
            </th>
            <th>
                <a asp-page="./Index" asp-route-sortOrder="@Model.NameSort"
                   asp-route-currentFilter="@Model.CurrentFilter">
                    @Html.DisplayNameFor(model => model.Recipes[0].Name)
                </a>
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Recipes[0].Description)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Recipes[0].Ingredients)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Recipes[0].Directions)
            </th>
            <th>
                <a asp-page="./Index" asp-route-sortOrder="@Model.CostSort"
                   asp-route-currentFilter="@Model.CurrentFilter">

                    @Html.DisplayNameFor(model => model.Recipes[0].TotalEstimatedCost)
                </a>
            </th>
            <th>
                <a asp-page="./Index" asp-route-sortOrder="@Model.CategorySort"
                   asp-route-currentFilter="@Model.CurrentFilter">
                    @Html.DisplayNameFor(model => model.Recipes[0].Category)
                </a>
            </th>
            <th></th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model.Recipes)
        {
            string selectedRow = "";
            if (item.ID == Model.RecipeID)
            {
                selectedRow = "table-success";
            }
            <tr class="@selectedRow">
                <td>
                    @Html.DisplayFor(modelItem => item.ID)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Name)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Description)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Ingredients)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Directions)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.TotalEstimatedCost)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Category)
                </td>
                <td>
                    <a asp-page="./Index" asp-route-id="@item.ID"
                   asp-route-sortOrder="@Model.CurrentSort"
                   asp-route-pageIndex="@(Model.Recipes.PageIndex)"
                   asp-route-currentFilter="@Model.CurrentFilter">Select</a> |
                    <a asp-page="./Edit" asp-route-id="@item.ID">Edit</a> |
                    <a asp-page="./Details" asp-route-id="@item.ID">Details</a> |
                    <a asp-page="./Delete" asp-route-id="@item.ID">Delete</a>
                </td>
            </tr>
        }
    </tbody>
</table>

@{
    var prevDisabled = !Model.Recipes.HasPreviousPage ? "disabled" : "";
    var nextDisabled = !Model.Recipes.HasNextPage ? "disabled" : "";
}

<a asp-page="./Index"
   asp-route-sortOrder="@Model.CurrentSort"
   asp-route-pageIndex="@(Model.Recipes.PageIndex - 1)"
   asp-route-currentFilter="@Model.CurrentFilter"
   class="btn btn-primary @prevDisabled">
    Previous
</a>
<a asp-page="./Index"
   asp-route-sortOrder="@Model.CurrentSort"
   asp-route-pageIndex="@(Model.Recipes.PageIndex + 1)"
   asp-route-currentFilter="@Model.CurrentFilter"
   class="btn btn-primary @nextDisabled">
    Next
</a>


@if (Model.RecipeReview != null)
{
    <br />
    <br />
    <h3>Reviews Left on Selected Recipe</h3>
    <table class="table">
        <thead>
            <tr>
                <th>
                    Recipe ID
                </th>
                <th>
                    Rating
                </th>
                <th>
                    Comment
                </th>
            </tr>
        </thead>
        <tbody>
            @foreach (var item in Model.RecipeReview)
            {
                foreach (var review in item.Reviews)

                {
                    <tr>
                        <td>
                            @Html.DisplayFor(modelItem => review.RecipeID)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => review.Rating)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => review.Comment)
                        </td>
                    </tr>
                }
            }
        </tbody>
    </table>
}
